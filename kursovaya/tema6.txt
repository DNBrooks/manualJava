	Рассмотрим физическое представление древовидных структур на примере обновления дерева с использованием следующих методов:
физически последовательное размещение,
указатели,
цепи и кольца.
Записи, относящиеся к разным уровням дерева, обычно рассматриваются как главные и детальные. Поэтому при реализации такого файла для любой пары уровней дерева есть возможность выбора вариантов включения сегментов нижнего уровня в сегменты верхнего уровня. Хотя, исходя из стремления к однородности массивов, обычно все сегменты нижнего уровня размещаются отдельно от сегментов верхнего уровня.
Последовательность элементов иногда называется левосписковой структурой (последовательность типа «сверху вниз - слева направо»).
Последовательность строится следующим образом: выбираются узлы, начиная от вершины дерева и вниз по самой левой ветви дерева; когда выбран узел самого нижнего уровня этой ветви, выбираются подобные узлы слева направо; процесс повторяется, причем уже выбранные узлы пропускаются.
При размещении каждой записи последовательности в памяти может указываться, к какому уровню дерева она относится. Это выполняется путем введения в каждую запись специального кода (например, тип записи может быть определен по типу ключа).
Последовательные левосписковые структуры не позволяют осуществлять быстрый выбор элементов нижних уровней дерева, так как при этом требуется просмотр всего списка.
Левосписковые структуры с переполнениями. Включение и удаление элементов могут быть выполнены с помощью метода переполнения или метода распределенной свободной памяти, рассмотренные ранее на примере метода ведения файлов с индексно-последовательной организацией данных.
В этом случае для определения местонахождения записей А, В или С можно использовать индексы.
Использование указателей на «подобные» и «порожденные». Для обеспечения эффективных процедур выборки записей могут использоваться ссылки следующих типов:
 указатели на порожденные записи;
 указатели на подобные записи;
 указатели на исходные записи.
При построении древовидных структур, в которых используется какой-либо один тип указателя, всегда исходят из альтернативы между сложностью реализации списка указателей переменной длины на порожденные записи и увеличением времени поиска, связанным с использованием цепочки указателей на подобные записи.
Практически эффективные компромиссы могут быть достигнуты путем использования в каждой записи двух указателей каких-либо двух типов, а также использованием кольцевых структур.

